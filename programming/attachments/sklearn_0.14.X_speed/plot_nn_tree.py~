import numpy as np
from matplotlib import pyplot as plt

data = np.recfromcsv('nn_trees.csv')
# Strip names:
data['tree'] = np.char.lstrip(data['tree'])
tree_names = np.unique(data['tree'])

tree_data = dict()
for tree_name in tree_names:
    tree_data[tree_name] = data[data['tree'] == tree_name]

tree_names = ['scipy cKDTree', 'sklearn KDTree', 'sklearn BallTree']

measure = 'test_time'
plt.figure(figsize=(7, 8))
for t1, t2, t3 in zip(*[tree_data[name]
                        for name in tree_names]):
    mean = np.mean((t1[measure], t2[measure], t3[measure]))
    t1[measure] /= mean
    t2[measure] /= mean
    t3[measure] /= mean

    plt.scatter([0, .9, 1.85], [t1[measure], t2[measure], t3[measure]],
                c=[0, .9, 1.85])
    plt.plot([0, .9, 1.85], [t1[measure], t2[measure], t3[measure]],
                '-', color='.5', zorder=-2)

    text_y = 1.02 * t3[measure] - .05
    plt.text(1.9, text_y, t3['datasets'])
    plt.text(2.95, text_y, 'n=%i' % t3['n_samples'])
    plt.text(3.6, text_y, 'p=%i' % t3['n_features'])

plt.xlim(-.1, 4.1)
plt.ylim(.17, 2.59)
plt.title('Relative %s' % measure.replace('_', ' '))
plt.xticks([0, .9, 1.85], tree_names)
plt.yticks(())
plt.tight_layout()

plt.show()
